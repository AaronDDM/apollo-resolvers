{"version":3,"sources":["../src/index.js"],"names":["Promise","global","usePromise","combineResolvers","resolvers","reduce","combined","resolver"],"mappings":";;;;;;;AAAA;;;;;;AAEA;AACA,IAAIA,UAAUC,OAAOD,OAArB;;AAEO,IAAME,kCAAa,SAAbA,UAAa,OAAQ,CAAE,CAA7B;;AAEP;AACO,IAAMC,8CAAmB,SAAnBA,gBAAmB;AAAA,MAACC,SAAD,uEAAa,EAAb;AAAA,SAAoBA,UACjDC,MADiD,CAC1C,UAACC,QAAD,EAAWC,QAAX;AAAA,WAAwB,yBAAMD,QAAN,EAAgBC,QAAhB,CAAxB;AAAA,GAD0C,CAApB;AAAA,CAAzB","file":"index.js","sourcesContent":["import merge from 'deepmerge';\n\n// Expose the Promise constructor so that it can be overwritten by a different lib like Bluebird\nlet Promise = global.Promise;\n\nexport const usePromise = pLib => {}\n\n// Helper function to combine multiple resolver definition hashes into a single hash for consumption by Apollostack's graphql-server\nexport const combineResolvers = (resolvers = []) => resolvers\n  .reduce((combined, resolver) => merge(combined, resolver));\n"]}